#
# GrayScott -- the Gray Scott reaction diffusion model
# jon klein <jk@spiderland.org>
#
# This is a simulation of the Gray Scott self-reproducing spots
# reaction/diffusion model.
#

@use Control.
@use Mobile.
@use Matrix.

@define F 0.01.
@define K 0.04.
@define RU .078.
@define RV .022.

@define TIMESTEP 1.0.

@define SIZE 128.

Controller GS.

Control : GS {
	+ variables:
		U (object).
		V (object).
		deltareact, delta, inflow (object).
		texture (object).
		cube (object).

	+ to init:
		m, n (int).
		
		self set-background-color to (1, 1, 1).

		self set-iteration-step to TIMESTEP.
		self set-integration-step to TIMESTEP.

		self point-camera at (0, 0, 0) from (0, 0, 70).

		U = new Matrix2D.
		V = new Matrix2D.
		inflow = new Matrix2D.
		delta = new Matrix2D.
		deltareact = new Matrix2D.

		U set-size x SIZE y SIZE.
		V set-size x SIZE y SIZE.
		delta set-size x SIZE y SIZE.
		deltareact set-size x SIZE y SIZE.
		inflow set-size x SIZE y SIZE.

		texture = new MatrixImage.
		texture init-with the-matrix U scale 1.0.
		texture set-red to V.
		texture set-blue to U.

		cube = new Mobile.
		cube set-shape to (new Cube init-with size (400, 400, 1)).
		cube set-texture-image to texture.
		cube set-texture-scale to 40.

		for n=0,n<SIZE,n++:
			for m=0,m<SIZE,m++: {
				U set-value to (0.5 + sqrt(|0.25 - F*(1.0 + K/F)*(1.0 + K/F)|) + 0.02*(random[1.0] - 0.5)) at-x m at-y n.
				V set-value to (1.0 - (U get-value at-x m at-y n))/(1.0 + K/F) + 0.02*(random[1.0] - 0.5) at-x m at-y n.

				inflow set-value to F at-x n at-y m.
			}

	+ to iterate:
		# First compute the reaction delta, which will tell us the gain in V and 
		# loss of U due to the reaction.

		# U + 2V => 3V (V is catalyzed by the presence of 2V)

		deltareact copy from U.
		deltareact multiply-with-values of V.
		deltareact multiply-with-values of V.

		# Compute the diffusion of U (with diffusion constant RU)

		delta compute-periodic-diffusion-matrix from U with-scale RU.

		# delta contains the diffused values of U.  Now subtract out the reaction values,
		# subtract the outflow values, and add the inflow rate. 

		delta add-values of deltareact scaled-by -1.0.
		delta add-values of U scaled-by -F.
		delta add-values of inflow.

		# Integrate the delta matrix to compute the next value of U
		U add-values of delta scaled-by TIMESTEP.


		### Done with U, now let's do V

		# Set delta to the diffusion of V (with diffusion constant RV)

		delta compute-periodic-diffusion-matrix from V with-scale RV.

		# Add to the delta the previously computed reaction matrix.  Then subtract out
		# V * -(K + F) which represents chemical decay and outflow.

		delta add-values of deltareact.
		delta add-values of V scaled-by -(K + F).
	
		# Integrate the delta matrix to compute the next value of V
		V add-values of delta scaled-by TIMESTEP.

		# Done!

		super iterate.
}
